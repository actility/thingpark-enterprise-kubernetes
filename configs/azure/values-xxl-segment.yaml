# Values configuring Thingpark Enterprise deployment for Amazon Elastic Kubernetes Service
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Node selector for Thingpark Enterprise deployment on only 3 nodes
nodeSelectorKey: &nodeSelectorKey "thingpark.enterprise.actility.com/nodegroup-name"
nodeSelectorValue: &nodeSelectorValue "tpe"
nodeSelector: &nodeSelector
  thingpark.enterprise.actility.com/nodegroup-name: *nodeSelectorValue
tolerations: &tolerations
  - key: *nodeSelectorKey
    operator: "Equal"
    value: *nodeSelectorValue
    effect: "NoSchedule"
## thingpark-data-controllers
psmdb-operator:
  tolerations: *tolerations
  nodeSelector: *nodeSelector
strimzi-kafka-operator:
  tolerations: *tolerations
  nodeSelector: *nodeSelector
## thingpark-data
mariadb-galera:
  nodeSelector: *nodeSelector
  tolerations: *tolerations
  priorityClassName: thingpark-enterprise-data
  resources:
    limits:
      memory: 4400Mi
    requests:
      memory: 2200Mi
  mariadbConfiguration: |-
    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    plugin_dir=/opt/bitnami/mariadb/plugin

    [mysqld]
    explicit_defaults_for_timestamp=1
    ###explicit_defaults_for_timestamp
    default_storage_engine=InnoDB
    basedir=/opt/bitnami/mariadb
    datadir=/bitnami/mariadb/data
    plugin_dir=/opt/bitnami/mariadb/plugin
    tmpdir=/opt/bitnami/mariadb/tmp
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid_file=/opt/bitnami/mariadb/tmp/mysqld.pid
    bind_address=0.0.0.0

    ## Character set
    ###collation_server=utf8_unicode_ci
    collation_server=utf8_general_ci
    ###init_connect='SET NAMES utf8'
    character_set_server=utf8

    ## MyISAM
    key_buffer_size=1M
    myisam_recover_options=FORCE,BACKUP

    ## Safety
    skip_host_cache
    skip_name_resolve
    ### max_allowed_packet=16M
    max_allowed_packet=64M
    max_connect_errors=1000000
    sql_mode=STRICT_TRANS_TABLES
    ### sql_mode=STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_AUTO_VALUE_ON_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ONLY_FULL_GROUP_BY
    sysdate_is_now=1

    ## Binary Logging
    log_bin=mysql-bin
    expire_logs_days=14
    # Disabling for performance per http://severalnines.com/blog/9-tips-going-production-galera-cluster-mysql
    sync_binlog=0
    # Required for Galera
    binlog_format=row

    ## Caches and Limits
    tmp_table_size=32M
    max_heap_table_size=32M
    query_cache_type=0
    query_cache_size=0
    ### max_connections=500
    max_connections=120
    ### thread_cache_size=50
    thread_cache_size=200
    ### Added
    back-log=128
    open_files_limit=65535
    table_definition_cache=4096
    table_open_cache=4096

    ## InnoDB
    innodb=FORCE
    innodb_strict_mode=OFF
    # Mandatory per https://github.com/codership/documentation/issues/25
    innodb_autoinc_lock_mode=2
    # Per https://www.percona.com/blog/2006/08/04/innodb-double-write/
    innodb_doublewrite=1
    innodb_flush_method=O_DIRECT
    innodb_log_files_in_group=2
    innodb_log_file_size=128M
    innodb_file_per_table=1
    # 80% Memory is default reco.
    # Need to re-evaluate when DB size grows
    innodb_buffer_pool_instances=1
    innodb_buffer_pool_chunk_size=128M
    innodb_buffer_pool_size=128M
    innodb_log_buffer_size=64M
    innodb_file_format=Barracuda

    ## Logging
    log_error=/opt/bitnami/mariadb/logs/mysqld.log
    slow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log
    log_queries_not_using_indexes=1
    slow_query_log=1

    optimizer_search_depth                   = 0
    optimizer_switch                         = 'index_merge=on'
    optimizer_switch                         = 'index_merge_union=on'
    optimizer_switch                         = 'index_merge_sort_union=on'
    optimizer_switch                         = 'index_merge_intersection=on'
    optimizer_switch                         = 'index_merge_sort_intersection=off'
    optimizer_switch                         = 'index_condition_pushdown=on'
    optimizer_switch                         = 'derived_merge=on'
    optimizer_switch                         = 'derived_with_keys=on'
    optimizer_switch                         = 'firstmatch=on'
    optimizer_switch                         = 'loosescan=on'
    optimizer_switch                         = 'materialization=on'
    optimizer_switch                         = 'in_to_exists=on'
    optimizer_switch                         = 'semijoin=on'
    optimizer_switch                         = 'partial_match_rowid_merge=on'
    optimizer_switch                         = 'partial_match_table_scan=on'
    optimizer_switch                         = 'subquery_cache=on,mrr=on'
    optimizer_switch                         = 'mrr_cost_based=on'
    optimizer_switch                         = 'mrr_sort_keys=off'
    optimizer_switch                         = 'outer_join_with_cache=on'
    optimizer_switch                         = 'semijoin_with_cache=on'
    optimizer_switch                         = 'join_cache_incremental=on'
    optimizer_switch                         = 'join_cache_hashed=on'
    optimizer_switch                         = 'join_cache_bka=on'
    optimizer_switch                         = 'optimize_join_buffer_size=on'
    optimizer_switch                         = 'table_elimination=on'
    optimizer_switch                         = 'extended_keys=on'

    join-buffer-space-limit                  = 4M
    join-cache-level                         = 6
    join-buffer-size                         = 4M

    [galera]
    wsrep_on=ON
    wsrep_provider=/opt/bitnami/mariadb/lib/libgalera_smm.so
    wsrep_sst_method=mariabackup
    wsrep_slave_threads=4
    wsrep_cluster_address=gcomm://
    wsrep_cluster_name=galera
    wsrep_sst_auth="root:"
    wsrep_provider_options = "gcache.size=2G;gcs.fc_limit=60;gcs.fc_factor=0.8; gmcast.segment=0"
    innodb_flush_log_at_trx_commit=2
    # MYISAM REPLICATION SUPPORT #
    wsrep_replicate_myisam=ON

    ### Maximum number of rows in write set
    wsrep_max_ws_rows                        = 0
    ### Maximum size of write set
    wsrep_max_ws_size                        = 1073741824

    [mariadb]
    plugin_load_add=auth_pam
  persistence:
    size: 30Gi
    storageClass: "thingpark-csi-premium-lrs-xfs"
zookeeper:
  nodeSelector: *nodeSelector
  tolerations: *tolerations
  priorityClassName: thingpark-enterprise-data
  resources:
    limits:
      memory: 150Mi
    requests:
      memory: 150Mi
  persistence:
    size: 5Gi
    storageClass: "thingpark-csi-premium-lrs-xfs"
## Data stack configuration
kafka-cluster:
  tolerations: *tolerations
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: *nodeSelectorKey
                operator: In
                values:
                  - *nodeSelectorValue
  priorityClassName: thingpark-enterprise-data
  kafka:
    resources:
      limits:
        memory: 4900Mi
    persistence:
      local: false
      storageSize: 40Gi
      storageClass: "thingpark-csi-premium-lrs-xfs"
  zookeeper:
    resources:
      limits:
        memory: 200Mi
      requests:
        memory: 200Mi
    persistence:
      local: false
      storageSize: 5Gi
      storageClass: "thingpark-csi-premium-lrs-xfs"
mongo-replicaset:
  replicaSet:
    nodeSelector: *nodeSelector
    tolerations: *tolerations
    resources:
      limits:
        memory: 69700Mi
    priorityClassName: thingpark-enterprise-data
  arbiter:
    nodeSelector: *nodeSelector
    tolerations: *tolerations
    resources:
      limits:
        memory: 200Mi
    priorityClassName: thingpark-enterprise-services
  persistence:
    local: false
    size: 999Gi
    storageClass: "thingpark-csi-premium-lrs-xfs"
## thingpark-enterprise-controllers
cert-manager:
  nodeSelector: *nodeSelector
  tolerations: *tolerations
  webhook:
    nodeSelector: *nodeSelector
    tolerations: *tolerations
  cainjector:
    nodeSelector: *nodeSelector
    tolerations: *tolerations
# Configuration for controllers
ingress-nginx:
  controller:
    nodeSelector: *nodeSelector
    tolerations: *tolerations
    admissionWebhooks:
      patch:
        tolerations: *tolerations
    priorityClassName: thingpark-enterprise-data-path
    resources:
      limits:
        memory: 384Mi
## thingpark-enterprise
acmeSolvers:
  - http01:
      ingress:
        class: nginx-tpe
        podTemplate:
          spec:
            nodeSelector: *nodeSelector
            tolerations: *tolerations
## Persistent Volume Claim setting to use EBS volumes for persistence
lrc:
  nodeSelector: *nodeSelector
  tolerations: *tolerations
  priorityClassName: thingpark-enterprise-data-path
  replicaCount: 2
  lrc:
    resources:
      limits:
        memory: 7000Mi
  lrcSync:
    resources:
      limits:
        memory: 400Mi
  sftp:
    resources:
      limits:
        memory: 200Mi
  rfscanBatch:
    resources:
      limits:
        memory: 200Mi
  persistence:
    size: 15Gi
    ftpSize: 10Gi
    storageClass: "thingpark-premium-lrs-ext4"
    ftpStorageClass: "thingpark-csi-premium-lrs-xfs"
sql-proxy:
  nodeSelector: *nodeSelector
  tolerations: *tolerations
  priorityClassName: thingpark-enterprise-data-path
  replicaCount: 2
  resources:
    limits:
      memory: 240Mi
tp-gui:
  nodeSelector: *nodeSelector
  tolerations: *tolerations
  priorityClassName: thingpark-enterprise-services
  replicaCount: 2
  resources:
    limits:
      memory: 200Mi
lrc-proxy:
  nodeSelector: *nodeSelector
  tolerations: *tolerations
  priorityClassName: thingpark-enterprise-data-path
  replicaCount: 2
  resources:
    limits:
      memory: 200Mi
support:
  nodeSelector: *nodeSelector
  tolerations: *tolerations
  priorityClassName: thingpark-enterprise-services
  replicaCount: 1
  resources:
    limits:
      memory: 400Mi
wireless-pki:
  nodeSelector: *nodeSelector
  tolerations: *tolerations
  priorityClassName: thingpark-enterprise-services
  replicaCount: 2
  resources:
    limits:
      memory: 1280Mi
locsolver:
  nodeSelector: *nodeSelector
  tolerations: *tolerations
  priorityClassName: thingpark-enterprise-services
  replicaCount: 1
  resources:
    limits:
      memory: 32Mi
smp-tpe:
  nodeSelector: *nodeSelector
  tolerations: *tolerations
  priorityClassName: thingpark-enterprise-services
  replicaCount: 2
  resources:
    limits:
      memory: 96Mi
twa:
  nodeSelector: *nodeSelector
  tolerations: *tolerations
  priorityClassName: thingpark-enterprise-services
  replicaCount: 2
  resources:
    limits:
      memory: 3200Mi
twa-admin:
  nodeSelector: *nodeSelector
  tolerations: *tolerations
  priorityClassName: thingpark-enterprise-services
  replicaCount: 2
  resources:
    limits:
      memory: 1400Mi
twa-dev:
  nodeSelector: *nodeSelector
  tolerations: *tolerations
  priorityClassName: thingpark-enterprise-services
  replicaCount: 2
  resources:
    limits:
      memory: 2400Mi
twa-ran:
  nodeSelector: *nodeSelector
  tolerations: *tolerations
  priorityClassName: thingpark-enterprise-services
  replicaCount: 2
  resources:
    limits:
      memory: 2400Mi
twa-task-res:
  nodeSelector: *nodeSelector
  tolerations: *tolerations
  priorityClassName: thingpark-enterprise-services
  replicaCount: 2
  resources:
    limits:
      memory: 1200Mi
twa-alarm-notif:
  nodeSelector: *nodeSelector
  tolerations: *tolerations
  priorityClassName: thingpark-enterprise-services
  replicaCount: 1
  resources:
    limits:
      memory: 200Mi
task-notif-ws:
  nodeSelector: *nodeSelector
  tolerations: *tolerations
  priorityClassName: thingpark-enterprise-services
  replicaCount: 1
  resources:
    limits:
      memory: 1200Mi
tpx-flow:
  nodeSelector: *nodeSelector
  tolerations: *tolerations
  priorityClassName: thingpark-enterprise-data-path
  engine:
    replicaCount: 2
    resources:
      limits:
        memory: 1000Mi
  supervisor:
    replicaCount: 1
    resources:
      limits:
        memory: 1200Mi
  hub:
    replicaCount: 2
    resources:
      limits:
        memory: 1200Mi
  bridge:
    replicaCount: 1
    resources:
      limits:
        memory: 1200Mi
  api:
    replicaCount: 2
    resources:
      limits:
        memory: 1200Mi
tp-dx:
  nodeSelector: *nodeSelector
  tolerations: *tolerations
  priorityClassName: thingpark-enterprise-data-path
  replicaCount: 2
  resources:
    limits:
      memory: 1200Mi
node-red:
  nodeSelector: *nodeSelector
  tolerations: *tolerations
  priorityClassName: thingpark-enterprise-data-path
  replicaCount: 1
  resources:
    limits:
      memory: 160Mi
  persistence:
    size: 10Gi
    storageClass: "thingpark-csi-premium-lrs-xfs"
nssa:
  nodeSelector: *nodeSelector
  tolerations: *tolerations
  priorityClassName: thingpark-enterprise-services
  networkSurvey:
    replicaCount: 1
    resources:
      limits:
        memory: 200Mi
  spectrumAnalysis:
    replicaCount: 1
    resources:
      limits:
        memory: 200Mi
wlogger:
  nodeSelector: *nodeSelector
  tolerations: *tolerations
  priorityClassName: thingpark-enterprise-services
  replicaCount: 2
  resources:
    limits:
      memory: 600Mi
shellinabox:
  nodeSelector: *nodeSelector
  tolerations: *tolerations
  priorityClassName: thingpark-enterprise-services
  replicaCount: 1
  resources:
    limits:
      memory: 200Mi
# Values configuring Thingpark Enterprise deployment for Azure Kubernetes Service
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
## Overall cloud configuration
global:
  storageType: "az-premium-lrs"
